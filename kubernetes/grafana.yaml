apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app: grafana
spec:
  selector:
    matchLabels:
      app: grafana
  replicas: 1
  template:
    metadata:
      name: grafana
      labels:
        app: grafana
    spec:
      nodeSelector:
        node-role.kubernetes.io/monitoring: prometheus
      containers:
      - name: grafana
        image: registry.cn-guangzhou.aliyuncs.com/orionbonnie/grafana:v1
        ports: 
        - containerPort: 3000
        env:
          - name: TZ
            value: "Asia/Shanghai"
        securityContext:
          runAsUser: 0
        resources:
          requests:
            cpu: 150m
            memory: 512M
          limits:
            cpu: 200m
            memory: 512M
        readinessProbe:
          failureThreshold: 10
          httpGet:
            path: /api/health
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 30
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/health
            port: 3000
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1 
        volumeMounts:
        - mountPath: /var/lib/grafana/
          name: grafana-data
      volumes:
      - name: grafana-data
        hostPath:
          path: /data/grafana-data 
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-svc
  namespace: monitoring
  labels:
    app: grafana
spec:
  selector:
    app: grafana
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: 3000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana-ingress
  namespace: monitoring
  labels:
    app: grafana
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    ingressclass.kubernetes.io/is-default-class: "true"
spec:
  ingressClassName: nginx
  rules:
  - host: www.promonitor.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: grafana-svc
            port:
              number: 3000
